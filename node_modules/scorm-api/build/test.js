'use strict';

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scorm = new _index2.default(function (data) {
  return console.log(data);
}, function () {
  return console.log('finished');
});
var errorCode = "0";
var errorString = "";

// example of http response
var resp = [{ "element": "cmi.suspend_data", "value": "Hi" }];

scorm.init(scorm.parse(resp));
scorm.LMSInitialize();
scorm.LMSSetValue('cmi', 'test');
errorCode = scorm.LMSGetLastError();
errorString = scorm.LMSGetErrorString(errorCode);

scorm.LMSSetValue('cmi.suspend_data', 'Hello world');
scorm.LMSSetValue('cmi.core.score.raw', 80);
scorm.LMSSetValue('cmi.core.score.max', 100);
scorm.LMSSetValue('cmi.core.score.min', 0);
scorm.LMSSetValue('cmi.interaction.0.count', 1);

var suspend = scorm.LMSGetValue('cmi.suspend_data');
var raw = scorm.LMSGetValue('cmi.core.score.raw');
var pass = scorm.LMSGetValue('cmi.core.score.pass');
errorCode = scorm.LMSGetLastError();
errorString = scorm.LMSGetErrorString(errorCode);

scorm.LMSCommit();
scorm.LMSFinish();